<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCACzAI0DASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8
        s6KKKACiiigAooooAKOtBOFZv4VGSfQeprkPiiupeKvCEtv4cmt7ppG23IhnTf5f90HPc9RnJGRzkigC
        WX4l2+tatqGkaLNDcara27Sws43QTuvJjUgjJx3HHXsDXjOtfFjxJqtxJ52qXcPODHCfJVPbC4/xrP0O
        31XR/FtvFZw3EWrW84WOPbhw47EH9c8Yznivc734LaDq+uTajeWjST3REksKzMsIf+IjGG5PPX8qAOE+
        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
</value>
  </data>
</root>